<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BeastLang-Backend-Expressive and Scalable Transpiling Language</title>
    <link rel="shortcut icon" href="BeastLang_Logo.png" type="image/x-icon">
    <link rel="stylesheet" href="style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Caesar+Dressing&family=Oswald:wght@200..700&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto+Condensed:ital@0;1&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <div class="navbar">
            <div class="logo">
                <img src="BeastLang_Logo.png" alt="">
                <h1>BeastLang.<span style="color: #52c0ff;">beast</span></h1>
            </div>
        </div>
        <div class="doc">
            <div class="main">
                <h1>üê≤ What is BeastLang?</h1>
                <p>BeastLang (Backend and Expressive Syntax for Transpiling Languages) is a next-generation programming language designed to revolutionize web development by combining frontend and backend logic in a single, unified syntax. With its own custom file extension .beast, BeastLang eliminates the need for traditional tools like JavaScript and npm by compiling directly into powerful MERN stack applications. Designed for simplicity, flexibility, and full-stack efficiency, BeastLang empowers developers to build modern web apps faster and more intuitively‚Äîmaking it the ultimate language for both newcomers and pros who want complete control without the complexity.</p>
            </div>
            <div class="main">
                <h1>üî• Why Choose BeastLang?</h1>
                <p>BeastLang was built with one mission: to simplify full-stack development without sacrificing power. Instead of juggling multiple languages and tools, developers can write seamless code that compiles directly into a MERN stack app. No JavaScript. No npm. Just one expressive language that handles everything from UI design to database logic.</p>
            </div>
            <div class="main">
                <h1>üî∑ Key Features</h1>
                <ul>
                    <li>Unified Syntax: One language to rule both frontend and backend.</li>
                    <li>Custom Compiler: BeastLang uses a Python-based compiler that transpiles to modern JavaScript, React, Express, MongoDB, and Node.js.</li>
                    <li>.beast Extension: Keep your project files clean, organized, and instantly recognizable.</li>
                    <li>Plug-and-Play Architecture: Addons for databases, auth, APIs, and more‚Äîwithout setup headaches.</li>
                    <li>Beginner Friendly, Pro Ready: Clean syntax that's easy to learn but powerful enough for advanced projects.</li>
                </ul>
            </div>
            <div class="main">
                <h1>üåç Built for the Web</h1>
                <p>BeastLang is designed to meet the demands of modern web development. Whether you're building a portfolio, a SaaS platform, or the next social media giant, BeastLang gives you the tools to get from idea to deployment in record time.</p>
            </div>
            <div class="main">
                <h1>üì¶ Package Manager (Coming Soon)</h1>
                <p>The BeastLang ecosystem includes a dedicated package manager to share, install, and manage reusable components and libraries, built exclusively for .beast files. Say goodbye to bloated dependencies and hello to focused, fast packages made for your workflow.</p>
            </div>
            <div class="main">
                <h1>üë®‚Äçüíª Current Stage of Development</h1>
                <p>BeastLang is currently in its early development phase, with the core compiler architecture being actively built in Python. The focus is on creating a stable syntax parser, transpiler logic, and backend integration that compiles BeastLang code directly into fully functional MERN stack applications. We're also working on establishing file structures, custom extensions (.beast), and a minimal runtime environment. While the language is not yet production-ready, internal prototypes are showing promising results, and the roadmap includes a functional CLI, documentation, and open beta access in upcoming milestones.</p>
            </div>
            <div class="main">
                <h1>Use Version-0.1</h1>
                <p>Code File (Python)</p>
                <p>Please consider to check the documentation before going forward</p>
                <div class="button">
                    <a href="BeastLang v-0.1 Alpha.py"><button>Click Here</button></a>
                    <a href="BeastLang v-0.1 Alpha Documentation.pdf" target="_blank"><button>Documentation for v-0.1</button></a>
                </div>
            </div>
        </div>
    </header>
    <footer>
        <img src="BeastLang_Logo.png" alt="">
        <h1>BeastLang.<span style="color: #52c0ff;">beast</span></h1>
    </footer>
</body>
</html>